-- ‚úÖ **Function Forward Declarations**
local moveTo, savePosition, returnToLastPosition, restock, placeBlock, buildSchematic, refuelTurtle

-- ‚úÖ **Restore Disk Startup for Future Turtles**
if peripheral.find("drive") then
    print("üîÑ Restoring disk startup...")
    if fs.exists("/disk/startuptemp.lua") then
        shell.run("mv /disk/startuptemp.lua /disk/startup.lua")
        print("‚úÖ Disk startup restored.")
    end
end

-- ‚úÖ **Wait for Rednet ID**
rednet.open("right")
local _, turtleID = rednet.receive("turtle_id")
if not turtleID then
    print("‚ùå ERROR: No Turtle ID received!")
    return
end

print("‚úÖ Received Turtle ID:", turtleID)

-- ‚úÖ **Refuel Before Moving**
for i = 1, 16 do
    if turtle.getItemCount(i) > 0 then
        turtle.select(i)
        if turtle.refuel(1) then
            print("‚õΩ Refueled with 1 Aeternus Fuel Block.")
            break
        end
    end
end

-- ‚úÖ **Move Forward One Block**
if turtle.forward() then
    print("‚úÖ Moved forward one block.")
else
    print("‚ùå ERROR: Failed to move forward!")
    return
end

-- ‚úÖ **Send Confirmation to Placer Turtle**
rednet.open("right")
rednet.broadcast("moved", "turtle_status")
rednet.close("right")

-- ‚úÖ **Download Block Data**
local dataURL = "https://raw.githubusercontent.com/robertjojo123/olympus2/main/output_" .. turtleID .. ".lua"

print("üåê Downloading block data from", dataURL)
shell.run("wget " .. dataURL .. " output.lua")

if not fs.exists("output.lua") then
    print("‚ùå Failed to download block data. Exiting.")
    return
end

print("üîÑ Loading block data...")
local blocks = dofile("output.lua")

-- ‚úÖ **Position Tracking**
local pos = {x = 0, y = 0, z = 0, dir = 0}

-- ‚úÖ **Set Reference Block Without Moving Onto It**
if turtle.forward() then
    pos = {x = 0, y = 0, z = -1, dir = 0}
    turtle.back()
end

print("‚úÖ Build reference set at", pos.x, pos.y, pos.z)

-- ‚úÖ **Material Chest Locations**
local materialChests = {
    ["minecraft:wool"] = {x = -1, y = 0, z = -4, dir = 3},
    ["minecraft:clay"] = {x = -1, y = 0, z = 0, dir = 3},
    ["minecraft:dirt"] = {x = -1, y = 0, z = -1, dir = 3},
    ["minecraft:grass"] = {x = -1, y = 0, z = -2, dir = 3},
    ["minecraft:stone"] = {x = -1, y = 0, z = -3, dir = 3},
    ["minecraft:log"] = {x = -1, y = 0, z = -6, dir = 3}
}

-- ‚úÖ **Fuel Chest Location**
local fuelChest = {x = -1, y = 0, z = -5, dir = 3}
local fuelItem = "projecte:aeternus_fuel_block"

-- ‚úÖ **Save Progress Function**
local function saveProgress(index)
    local file = fs.open("progress.txt", "w")
    file.writeLine(index)
    file.close()
end

-- ‚úÖ **Load Progress Function**
local function loadProgress()
    if fs.exists("progress.txt") then
        local file = fs.open("progress.txt", "r")
        local index = tonumber(file.readLine())
        file.close()
        return index or 1
    end
    return 1
end

-- ‚úÖ **Movement Functions**
local function turnLeft() turtle.turnLeft(); pos.dir = (pos.dir - 1) % 4 end
local function turnRight() turtle.turnRight(); pos.dir = (pos.dir + 1) % 4 end

local function moveForward()
    if turtle.forward() then
        if pos.dir == 0 then pos.z = pos.z + 1
        elseif pos.dir == 1 then pos.x = pos.x + 1
        elseif pos.dir == 2 then pos.z = pos.z - 1
        elseif pos.dir == 3 then pos.x = pos.x - 1
        end
        return true
    end
    return false
end

moveTo = function(target)
    while pos.x ~= target.x do
        if pos.x < target.x then while pos.dir ~= 1 do turnRight() end
        else while pos.dir ~= 3 do turnRight() end
        end
        moveForward()
    end
    while pos.z ~= target.z do
        if pos.z < target.z then while pos.dir ~= 0 do turnRight() end
        else while pos.dir ~= 2 do turnRight() end
        end
        moveForward()
    end
end

-- ‚úÖ **Restock Function**
restock = function(block)
    local blockID = "minecraft:" .. block
    local chestPos = materialChests[blockID]

    if not chestPos then
        print("‚ùå No chest found for " .. blockID)
        return false
    end

    print("üîÑ Restocking " .. blockID)

    savePosition()
    moveTo(chestPos)
    while pos.dir ~= chestPos.dir do turnLeft() end

    for _ = 1, 8 do
        if turtle.suck(64) then
            print("‚úÖ Restocked " .. blockID)
            break
        end
    end

    returnToLastPosition()
    return true
end

-- ‚úÖ **Updated Place Block Function (Skips Existing Blocks)**
placeBlock = function(block)
    local exists, _ = turtle.inspectDown()
    if exists then
        print("‚è≠ Block already exists, skipping...")
        return true
    end

    for i = 1, 16 do
        local item = turtle.getItemDetail(i)
        if item and item.name == "minecraft:" .. block then
            turtle.select(i)
            if turtle.placeDown() then
                print("‚úÖ Placed", block)
                return true
            end
        end
    end

    print("‚ùå Out of", block, "restocking...")
    if restock(block) then return placeBlock(block) end
    return false
end

-- ‚úÖ **Updated Build Function**
buildSchematic = function()
    local startIndex = loadProgress()
    for i = startIndex, #blocks do
        local blockData = blocks[i]
        local target = {x = pos.x + blockData.x, y = pos.y + blockData.y, z = pos.z + blockData.z}
        moveTo(target)
        if placeBlock(blockData[1]) then
            saveProgress(i + 1)
        end
    end
    print("‚úÖ Build complete!")
end

-- ‚úÖ **Start Building**
buildSchematic()
