-- ‚úÖ **Function Forward Declarations**
local moveTo, saveProgress, loadProgress, placeBlock, buildSchematic, restock

-- ‚úÖ **Material Chest Locations**
local materialChests = {
    ["minecraft:wool"] = {x = -1, y = 0, z = -4, dir = 3},
    ["minecraft:clay"] = {x = -1, y = 0, z = 0, dir = 3},
    ["minecraft:dirt"] = {x = -1, y = 0, z = -1, dir = 3},
    ["minecraft:grass"] = {x = -1, y = 0, z = -2, dir = 3},
    ["minecraft:stone"] = {x = -1, y = 0, z = -3, dir = 3},
    ["minecraft:log"] = {x = -1, y = 0, z = -6, dir = 3}
}

-- ‚úÖ **Load Progress or Set Default Start Position**
local function loadProgress()
    if fs.exists("progress.txt") then
        local file = fs.open("progress.txt", "r")
        local data = textutils.unserialize(file.readAll())  
        file.close()
        if data and data.index and data.pos then
            print("üîÑ Resuming from saved position:", data.pos.x, data.pos.y, data.pos.z)
            return data.index, data.pos
        end
    end
    return 1, {x = 0, y = 0, z = -5}
end

-- ‚úÖ **Save Progress Function**
local function saveProgress(index, position)
    local file = fs.open("progress.txt", "w")
    file.write(textutils.serialize({index = index, pos = position}))
    file.close()
end

-- ‚úÖ **Set Starting Position**
local buildIndex, pos = loadProgress()

if buildIndex == 1 then
    rednet.open("right")
    local _, turtleID = rednet.receive("turtle_id")
    if not turtleID then return end

    print("‚úÖ Received Turtle ID:", turtleID)

    -- ‚úÖ **Refuel Once at Startup**
    for i = 1, 16 do
        if turtle.getItemCount(i) > 0 then
            turtle.select(i)
            if turtle.refuel(1) then
                print("‚õΩ Refueled with 1 Aeternus Fuel Block.")
                break
            end
        end
    end

    -- ‚úÖ **Send Confirmation to Placer Turtle**
    rednet.broadcast("moved", "turtle_status")
    rednet.close("right")

    -- ‚úÖ **Download Block Data (Updated URL)**
    local dataURL = "https://raw.githubusercontent.com/robertjojo123/limpy3/main/output_" .. turtleID .. ".lua"
    shell.run("wget " .. dataURL .. " output.lua")

    if not fs.exists("output.lua") then
        print("‚ùå Failed to download block data. Exiting.")
        return
    end
end

print("üîÑ Loading block data...")
local blocks = dofile("output.lua")

-- ‚úÖ **Movement System**
local function turnLeft() turtle.turnLeft(); pos.dir = (pos.dir - 1) % 4 end
local function turnRight() turtle.turnRight(); pos.dir = (pos.dir + 1) % 4 end

moveTo = function(target)
    while pos.x ~= target.x do
        if pos.x < target.x then while pos.dir ~= 1 do turnRight() end
        else while pos.dir ~= 3 do turnRight() end
        end
        while not turtle.forward() do
            print("üöß Block ahead! Trying alternative path...")
            turtle.turnRight()
            if not turtle.forward() then
                turtle.turnLeft()
            end
        end
        pos.x = target.x  
    end

    while pos.z ~= target.z do
        if pos.z < target.z then while pos.dir ~= 0 do turnRight() end
        else while pos.dir ~= 2 do turnRight() end
        end
        while not turtle.forward() do
            print("üöß Block ahead! Trying alternative path...")
            turtle.turnRight()
            if not turtle.forward() then
                turtle.turnLeft()
            end
        end
        pos.z = target.z  
    end
end

-- ‚úÖ **Updated Place Block Function (Skips Existing Blocks)**
placeBlock = function(block)
    local exists, _ = turtle.inspectDown()
    if exists then
        print("‚è≠ Block already exists, skipping...")
        return true
    end

    for i = 1, 16 do
        local item = turtle.getItemDetail(i)
        if item and item.name == "minecraft:" .. block then
            turtle.select(i)
            if turtle.placeDown() then
                print("‚úÖ Placed", block)
                return true
            end
        end
    end

    print("‚ùå Out of", block, "restocking...")
    if restock(block) then return placeBlock(block) end
    return false
end

-- ‚úÖ **Restock Function**
restock = function(block)
    local blockID = "minecraft:" .. block
    local chestPos = materialChests[blockID]

    if not chestPos then
        print("‚ùå No chest found for " .. blockID)
        return false
    end

    print("üîÑ Restocking " .. blockID)
    saveProgress(buildIndex, pos)
    moveTo(chestPos)
    while pos.dir ~= chestPos.dir do turnLeft() end

    local success = false
    for _ = 1, 8 do
        if turtle.suck(64) then
            print("‚úÖ Restocked " .. blockID)
            success = true
            break
        end
    end

    return success
end

-- ‚úÖ **Build Process**
buildSchematic = function()
    print("üèó Starting build process from index:", buildIndex)
    for i = buildIndex, #blocks do
        local blockData = blocks[i]
        moveTo(blockData)

        while not placeBlock(blockData[1]) do
            print("üîÑ Retrying placement of " .. blockData[1] .. " after restock")
        end
        
        saveProgress(i + 1, pos)
    end
    print("‚úÖ Build complete!")
end

buildSchematic()
